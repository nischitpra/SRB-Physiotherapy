{"version":3,"sources":["images/HomePatientDoctor.svg","images/logo.svg","components/BookAppointmentForm.js","components/AddressAndProblemForm.js","components/Thankyou.js","components/SlidingPanel.js","modules/BasicAppointmentForm.js","modules/Home.js","components/NavBar.js","modules/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BookAppointmentForm","props","state","name","phoneNumber","date","disableButton","key","value","this","setState","form","fetch","then","response","formId","ok","text","html","i","indexOf","length","character","updateFormData","slidingPanelRef","current","nextPanel","console","log","alert","catch","error","className","style","width","type","placeholder","onChange","evt","changeFormValue","target","onClick","submitForm","disabled","React","Component","AddressAndProblemForm","address","problem","Thankyou","SlidingPanel","currentContentIndex","maxContentIndex","panels","currentContent","nextContent","nextButtonLabel","startButtonLabel","document","getElementById","_exitAnimation","setTimeout","newIndex","newContent","buttonLabel","endButtonLabel","_enterAnimation","id","BasicAppointmentForm","createRef","bind","render1","render2","render3","ref","Home","src","patientCheckupImage","NavBar","logo","Dashboard","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.eb1f4596.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HomePatientDoctor.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport '../css/BookAppointmentForm.css';\n\nclass BookAppointmentForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      name:\"\",\n      phoneNumber:\"\",\n      date:\"\",\n      disableButton: false,\n    }\n  }\n\n  changeFormValue(key, value){\n    this.setState({\n      [key]: value\n    })\n  }\n\n  submitForm() {\n    this.setState({disableButton:true})\n\n    const corsProxy = \"https://cors-anywhere.herokuapp.com/\"\n    const form = `https://docs.google.com/forms/d/e/1FAIpQLSdzM-T-0_C6kr5AEugu7kSt_bcHO2nM7W2t1_AcfujsT7l_mA/formResponse?usp=pp_url&entry.1000057=${this.state.name}&entry.1000027=${this.state.phoneNumber}&entry.2055232012=${this.state.date}`\n\n    fetch(corsProxy+form)\n    .then(response=>{\n      this.setState({disableButton:false})\n\n      let formId=\"\"\n      if(response.ok){\n        response.text().then(html=>{\n          const identifier = \"edit2=\"\n          const startIndex = html.indexOf(identifier)+identifier.length\n          for(let i=startIndex;i<html.length;i++){\n            let character = html[i]\n            if(character==\"\\\"\" || character==\"&\")break\n            formId+=html[i]\n          }\n\n          this.props.updateFormData(\"formId\", formId)\n\n          if(this.props.slidingPanelRef!=null) {\n            this.props.slidingPanelRef.current.nextPanel()\n          }\n        })\n      }else{\n        console.log(\"Something is not right. The server responded with error\")\n        alert(\"Please check from data and try again.\")\n      }\n    }).catch(error=>{\n      console.log(\"Could not submit form\")\n      this.setState({disableButton:false})\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"flex-center\">\n        <h1 className=\"book-appointment-form-caption\">We come to your home!</h1>\n        <hr style={{width:\"200px\"}}/>\n        <div className=\"form-container\">\n          <div className=\"form-title\">Schedule an Appointment</div>\n          <div className=\"form-content\">\n            <input className=\"form-content-row\" type=\"name\" placeholder=\"Name\" onChange={ (evt)=> this.changeFormValue( \"name\", evt.target.value ) } />\n            <input className=\"form-content-row\" type=\"phonenumber\" placeholder=\"Phone Number\" onChange={ (evt)=> this.changeFormValue( \"phoneNumber\", evt.target.value ) } />\n            <label className=\"form-content-row datepicker-container\" >\n              <span className=\"datepicker-label\">Book date</span>\n              <input className=\"datepicker\" type=\"date\" placeholder=\"Date\" onChange={ (evt)=> this.changeFormValue(\"date\", evt.target.value)} />\n            </label>\n          </div>\n          <button className=\"form-submit-button\" onClick={()=>this.submitForm() } disabled={this.state.disableButton} >Book Now</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BookAppointmentForm\n","import React from 'react';\nimport '../css/AddressAndProblemForm.css';\n\nclass AddressAndProblemForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      address:\"\",\n      problem:\"\",\n    }\n  }\n\n  changeFormValue(key, value) {\n    this.setState({\n      [key]: value\n    })\n  }\n\n  submitForm() {\n    this.setState({disableButton:true})\n\n    const corsProxy = \"https://cors-anywhere.herokuapp.com/\"\n    const form = `https://docs.google.com/forms/u/0/d/e/1FAIpQLSdzM-T-0_C6kr5AEugu7kSt_bcHO2nM7W2t1_AcfujsT7l_mA/formResponse?edit2=${this.props.formId}&entry.1000025=${this.state.address}&entry.329804431=${this.state.problem}`\n\n    fetch(corsProxy+form)\n    .then(response=>{\n      this.setState({disableButton:false})\n\n      let formId=\"\"\n      if(response.ok){\n        response.text().then(html=>{\n          const identifier = \"edit2=\"\n          const startIndex = html.indexOf(identifier)+identifier.length\n          for(let i=startIndex;i<html.length;i++){\n            let character = html[i]\n            if(character==\"\\\"\" || character==\"&\")break\n            formId+=html[i]\n          }\n\n          this.props.updateFormData(\"formId\", formId)\n\n          if(this.props.slidingPanelRef!=null) {\n            this.props.slidingPanelRef.current.nextPanel()\n          }\n        })\n      }else{\n        console.log(\"Something is not right. The server responded with error\")\n        alert(\"Please check from data and try again.\")\n      }\n    }).catch(error=>{\n      console.log(\"Could not submit form\")\n      this.setState({disableButton:false})\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"flex-center\">\n        <div className=\"form-container\">\n          <div className=\"form-title\">Just a few more details</div>\n          <div className=\"form-content\">\n            <textarea className=\"form-content-row textarea\" type=\"name\" placeholder=\"Address\" onChange={ (evt)=> this.changeFormValue( \"address\", evt.target.value ) } />\n            <input className=\"form-content-row\" type=\"name\" placeholder=\"Problem you're facing\" onChange={ (evt)=> this.changeFormValue( \"problem\", evt.target.value ) } />\n          </div>\n          <button className=\"form-submit-button\" onClick={()=>this.submitForm() } disabled={this.state.disableButton} >Submit</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddressAndProblemForm\n","import React from 'react';\nimport '../css/Thankyou.css';\n\nclass Thankyou extends React.Component {\n  render() {\n    return(\n      <div className=\"flex-center\">\n        <h1 className=\"book-appointment-form-caption\">Thankyou!</h1>\n        <div className=\"form-container\">\n          <div className=\"form-title-thankyou\">We will contact you shortly</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Thankyou\n","import React from 'react'\n\n\nimport '../css/SlidingPanel.css'\n\nclass SlidingPanel extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      currentContentIndex: 0,\n      maxContentIndex: props.panels.length-1,\n      currentContent: props.panels[0],\n      nextContent: props.panels[1],\n      nextButtonLabel: props.startButtonLabel,\n    }\n\n  }\n\n  _enterAnimation() {\n    document.getElementById(\"sliding-panel-content\").className = \"enter\"\n  }\n\n  _exitAnimation() {\n    document.getElementById(\"sliding-panel-content\").className = \"exit\"\n  }\n\n  nextPanel() {\n    const currentContentIndex = this.state.currentContentIndex\n    if(currentContentIndex < this.state.maxContentIndex) {\n      this._exitAnimation()\n    } else {\n      // todo: call final submission here\n      return\n    }\n\n    setTimeout(()=>{\n      const newIndex = this.state.currentContentIndex + 1\n      const newContent = this.props.panels[newIndex]\n\n      let nextContent = null\n      let buttonLabel = this.props.endButtonLabel\n      if(newIndex + 1 < this.props.panels.length){\n        buttonLabel = this.props.nextButtonLabel\n        nextContent = this.props.panels[newIndex+1]\n      }\n\n      this.setState({\n        currentContentIndex: newIndex, \n        currentContent: newContent, \n        nextContent: nextContent, \n        nextButtonLabel: buttonLabel\n      }, this._enterAnimation)\n     \n    }, 250)\n  }\n \n  render() {\n    return(\n      <div>\n        <div id=\"sliding-panel-content\">\n          {this.state.currentContent}\n        </div>\n        { this.props.startButtonLabel && <button onClick={()=>this.nextPanel()}>{this.state.nextButtonLabel}</button> }\n      </div>\n    )\n  }\n\n}\n\nexport default SlidingPanel","import React from 'react'\nimport BookAppointmentForm from '../components/BookAppointmentForm'\nimport AddressAndProblemForm from '../components/AddressAndProblemForm'\nimport Thankyou from '../components/Thankyou'\nimport SlidingPanel from '../components/SlidingPanel'\n\nclass BasicAppointmentForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      formId:\"\"\n    }\n\n    this.slidingPanelRef = React.createRef();\n\n    this.updateFormData = this.updateFormData.bind(this)\n\n    this.render1 = this.render1.bind(this)\n    this.render2 = this.render2.bind(this)\n    this.render3 = this.render3.bind(this)\n  }\n\n  updateFormData(key, value) {\n    this.setState({\n      [key]: value\n    })\n  }\n\n  render1() {\n    return(\n      <BookAppointmentForm slidingPanelRef={this.slidingPanelRef} updateFormData={this.updateFormData}/>\n    )\n  }\n\n  render2() {\n    return(\n      <AddressAndProblemForm slidingPanelRef={this.slidingPanelRef} updateFormData={this.updateFormData} formId={this.state.formId}/>\n    )\n  }\n\n  render3() {\n    return(\n      <Thankyou/>\n    )\n  }\n\n  render() {\n    return(\n      <div className={this.props.className}>\n        <SlidingPanel ref={this.slidingPanelRef} panels={[this.render1(), this.render2(), this.render3()]}/>\n      </div>\n    )\n  }\n\n}\n\nexport default BasicAppointmentForm\n","import React, { Component } from 'react'\nimport patientCheckupImage from \"../images/HomePatientDoctor.svg\"\nimport BasicAppointmentForm from './BasicAppointmentForm'\n\nimport '../css/Home.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home-container\">\n        <img className=\"flex-1\"src={patientCheckupImage}/>\n        <BasicAppointmentForm className=\"flex-center\"/>\n      </div>\n    )\n  }\n}\n\nexport default Home","import React from 'react'\nimport logo from '../images/logo.svg'\n\nimport '../css/NavBar.css';\n\n\nclass NavBar extends React.Component {\n  constructor(props){\n    super(props)\n  }\n\n  render(){\n    return(\n      <div className=\"navbar\">\n        <img className=\"logo\" src={logo}/>\n        <div className=\"company-block\">\n          <div className=\"company-name\">SRB Physio</div>\n          <div className=\"company-motto\">Cure at Home</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NavBar","import React from 'react'\nimport Home from './Home'\nimport NavBar from '../components/NavBar'\n\nclass Dashboard extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return(\n      <div>\n        <NavBar/>\n        <Home/>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard","import React from 'react';\nimport './App.css';\n\nimport Dashboard from './modules/Dashboard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}